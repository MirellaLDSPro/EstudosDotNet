@page "/converter"
@inject ILogger<Converter> Logger
    
<EditForm Model="Model" OnSubmit="Submit" FormName="converter1">
    <div class="mb-3">
        <label class="form-label">Caminho dos arquivos DOC/DOCX</label>
        <InputText id="docPath" class="form-control" @bind-Value="Model!.DocPath" />
    </div>

    <div class="mb-3">
        <label class="form-label">Pasta de Destino dos PDFs</label>
        <InputText id="pdfPath" class="form-control" @bind-Value="Model!.PdfPath" />
    </div>

    <div class="mb-3">
        <label class="form-label">Caminho do LibreOffice</label>
        <InputText id="libreOfficePath" class="form-control" @bind-Value="Model!.LibreOfficePath" />
    </div>

    <button type="submit" class="btn btn-primary">Converter</button>
</EditForm>

@code 
{
    [SupplyParameterFromForm]
    public ConverterFormModel? Model { get; set; }

    protected override void OnInitialized() => Model ??= new();

    private void Submit()
    {
        if (Model?.DocPath is null || Model.PdfPath is null || Model.LibreOfficePath is null)
        {
            return;
        }

        // Obtém todos os arquivos DOC/DOCX no diretório pai e subdiretórios
        string[] docFiles = Directory.GetFiles(Model.DocPath, "*.doc", SearchOption.AllDirectories)
                              .Concat(Directory.GetFiles(Model.DocPath, "*.docx", SearchOption.AllDirectories))
                              .ToArray();

        foreach (string docFile in docFiles)
        {
            // Obtém o caminho relativo do arquivo em relação ao diretório pai
            string relativePath = Path.GetRelativePath(Model.DocPath, docFile);

            // Define o caminho de destino para o arquivo PDF, mantendo a estrutura de diretórios
            string pdfDestinationDir = Path.Combine(Model.PdfPath, Path.GetDirectoryName(relativePath)!);
            Directory.CreateDirectory(pdfDestinationDir);

            // Define o nome do arquivo PDF correspondente no diretório de destino
            string pdfFileName = Path.GetFileNameWithoutExtension(docFile) + ".pdf";
            string pdfFile = Path.Combine(pdfDestinationDir, pdfFileName);

            // Executa a conversão
            LibreOffice.Run(doc: docFile, pdf: pdfDestinationDir, libre: Model.LibreOfficePath);
        }

        Console.WriteLine("Conversão concluída.");
    }
}